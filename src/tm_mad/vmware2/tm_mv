#!/usr/bin/env ruby

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #
# $stdout = $stderr

ONE_LOCATION=ENV["ONE_LOCATION"]

if !ONE_LOCATION
  VMDIR="/var/lib/one"
else
  VMDIR=ONE_LOCATION+"/var"
end

$: << File.dirname(__FILE__)
$: << File.join(File.dirname(__FILE__), "..")

require 'VMKFSDriver'

src      = ARGV[0]
dst      = ARGV[1]

src_host = src.split(":")[0]
src_path = src.split(":")[1].squeeze("/")

dst_host = dst.split(":")[0]
dst_path = dst.split(":")[1].squeeze("/")

hostname=`hostname`.tr("\n","")

# Transfer from one to host
if src_host == hostname
  # if local source path ends with images, it is probably
  # a resume and then all disks must be copied on the host 
  if src_path.match(".*(\/images$)")
    then
    vmkfs = VMKSFSDriver.new(dst_host)
    vmkfs.restoredisks(src_path,dst_path)
  # if it is an individual disk
  elsif src_path.match(".*(\/disk\..*$)")
    vmkfs = VMKSFSDriver.new(dst_host)
    vmkfs.mvto(src_path,dst_path)
  # the rest
  else
    command = File.dirname(__FILE__)+"/tm_mv.sh"
    puts `#{command} #{src} #{dst}`
  end
  # Transfer from host to one
else
  # if remote source path ends with images, it is probably
  # a save and then all disks must be copied on one 
  if src_path.match(".*(\/images$)")
    then
    vmkfs = VMKSFSDriver.new(src_host)
    vmkfs.savedisks(src_path,dst_path)
  # if it is an individual disk
  elsif src_path.match(".*(\/disk\..*$)")
    vmkfs = VMKSFSDriver.new(src_host)
    vmkfs.save disk(src_path,dst_path)
  # the rest
  else
    command = File.dirname(__FILE__)+"/tm_mv.sh"
    puts `#{command} #{src} #{dst}`
  end
end
